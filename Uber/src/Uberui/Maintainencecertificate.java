/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Uberui;

import javax.swing.table.DefaultTableModel;
import uber.Carshistory;
import uber.Cars;
/**
 *
 * @author Sarvesh
 */
public class Maintainencecertificate extends javax.swing.JPanel {

    Carshistory hist;
    private Cars cars;
    public Maintainencecertificate(Carshistory hist) {
        initComponents();
        this.hist = hist;
        populateMaintenanceActiveCars();
        populateMaintenanceExpiredCars();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        activecars = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        expiredcars = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        activecars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Carname", "Carcompany", "Year", "City", "Serialno", "Modelno", "Manufacturer", "Seats"
            }
        ));
        jScrollPane1.setViewportView(activecars);

        expiredcars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Carname", "Carcompany", "Year", "City", "Serialno", "Modelno", "Manufacturer", "Seats"
            }
        ));
        jScrollPane2.setViewportView(expiredcars);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Expired Maintainence");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Active Maintainence");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(538, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activecars;
    private javax.swing.JTable expiredcars;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void populateMaintenanceActiveCars() {
        DefaultTableModel model = (DefaultTableModel) activecars.getModel();
        model.setRowCount(0);
        
        for(Cars cars: hist.getHist()){
            Object[] row = new Object[8];
            if(cars.isMaintainencevalid()){
            row[0] = cars;
            row[1] = cars.getCarcompany();
            row[2] = cars.getYear();
            row[3] = cars.getCity();
            row[4] = cars.getSerialno();
            row[5] = cars.getModelno();
            row[6] = cars.getManufacturer();
            row[7] = cars.getSeatno();
            model.addRow(row); 
        }
        }
    }

    private void populateMaintenanceExpiredCars() {
        DefaultTableModel model = (DefaultTableModel) expiredcars.getModel();
        model.setRowCount(0);
        
        for(Cars cars: hist.getHist()){
            Object[] row = new Object[8];
            if(!(cars.isMaintainencevalid())){
            row[0] = cars;
            row[1] = cars.getCarcompany();
            row[2] = cars.getYear();
            row[3] = cars.getCity();
            row[4] = cars.getSerialno();
            row[5] = cars.getModelno();
            row[6] = cars.getManufacturer();
            row[7] = cars.getSeatno();
            model.addRow(row); 
        }
    }
        }
}
